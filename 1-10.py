# If we list all the natural numbers below 10 that are multiples of 3 or 5, we
# get 3, 5, 6 and 9. The sum of these multiples is 23.
# Find the sum of all the multiples of 3 or 5 below 1000.

def mult3or5sum(r):
    return sum([x for x in range(r) if (x%3==0 or x%5==0)])

# print(mult3or5sum(1000))

# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89,...
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.

def evenFibonacci(max):
    prev = 1
    cur = 2
    sum = 0
    while cur < max:
        if cur%2 == 0:
            sum += cur
        cur += prev
        prev = cur - prev
    return sum

# print(evenFibonacci(4000000))

# The prime factors of 13195 are 5, 7, 13 and 29.
# What is the largest prime factor of the number 600851475143?

import math

def largestPrimeFactor(n):
    res = 0
    for i in range(3, int(math.sqrt(n)+1), 2):
        while n % i == 0:
            n /= i
            res = i
    return n if n != 1 else res

# print(largestPrimeFactor(600851475143))

# A palindromic number reads the same both ways. The largest palindrome made
# from the product of two 2-digit numbers is 9009 = 91x99.
# Find the largest palindrome made from the product of two 3-digit numbers.

def palindromic(digits):
    pal = 0
    for n in reversed(range(10**(digits-1), 10**digits)):
        for m in reversed(range(10**(digits-1), n+1)):
            p = n*m
            if (str(p) == str(p)[::-1] and p > pal):
                pal = p
    return pal

# print(palindromic(3))

# 2520 is the smallest number that can be divided by each of the numbers from 1
# to 10 without any remainder.
# What is the smallest positive number that is evenly divisible by all of the
# numbers from 1 to 20?

# Idea is: least common multiple of [1..10] is 2520. To find LCM of [1..11] we
# multiply 2520 by the smallest x such that (2520*x) % 11 == 0. Repeat til 20.
# Except we start with 1 instead of 2520 for reusability
def evenlyDivisible(m):
    res = 1
    for n in range(2, m+1):
        prev = res
        while res % n != 0:
            res += prev
    return res

print(evenlyDivisible(20))


